{"openapi": "3.0.1", "info": {"title": "SEM.NG.Reporting", "description": "Last commit on 2025-04-08, in branch master", "version": "9.0.2-alpha.54"}, "paths": {"/api/reporting/api/Reporting/AggregatedReadouts": {"post": {"tags": ["AggregatedReadouts"], "operationId": "BrowseReportAggregatedReadouts", "parameters": [{"name": "dateFrom", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "dateTo", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "serviceCode", "in": "query", "schema": {"type": "string"}}, {"name": "missingDataStatus", "in": "query", "schema": {"$ref": "#/components/schemas/MissingDataStatus"}}, {"name": "Audit-Correlation-Id", "in": "header", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/IGroupTarget"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IGroupTarget"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IGroupTarget"}}}}, "responses": {"200": {"description": "Success", "content": {"text/plain": {"schema": {"$ref": "#/components/schemas/UniversalResponse"}}, "application/json": {"schema": {"$ref": "#/components/schemas/UniversalResponse"}}, "text/json": {"schema": {"$ref": "#/components/schemas/UniversalResponse"}}}}}}}, "/api/reporting/api/Reporting/Anomalies": {"post": {"tags": ["Anomalies"], "summary": "Browse anomalies.", "operationId": "BrowseAnomalies", "parameters": [{"name": "dateFrom", "in": "query", "description": "The start date for filtering anomalies.", "schema": {"type": "string", "format": "date"}}, {"name": "dateTo", "in": "query", "description": "The end date for filtering anomalies.", "schema": {"type": "string", "format": "date"}}, {"name": "eventTypeName", "in": "query", "description": "The event type name.", "schema": {"type": "string"}}, {"name": "Audit-Correlation-Id", "in": "header", "description": "The audit correlation ID.", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"description": "The data manager request with device group definition.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnomalyResponseBrowseResultWithCount"}}}}}}}, "/api/reporting/api/Reporting/Events": {"post": {"tags": ["Events"], "summary": "Browse events.", "operationId": "BrowseEvents", "parameters": [{"name": "dateFrom", "in": "query", "description": "The start date for filtering events.", "schema": {"type": "string", "format": "date"}}, {"name": "dateTo", "in": "query", "description": "The end date for filtering events.", "schema": {"type": "string", "format": "date"}}, {"name": "Audit-Correlation-Id", "in": "header", "description": "The audit correlation ID.", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"description": "The data manager request.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataManagerRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataManagerRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataManagerRequest"}}}}, "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Reporting/FailedValidation": {"post": {"tags": ["FailedValidation"], "operationId": "BrowseFailedValidation", "parameters": [{"name": "dateFrom", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "dateTo", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "readoutValidationTypes", "in": "query", "schema": {"$ref": "#/components/schemas/ReadoutValidationType"}}, {"name": "Audit-Correlation-Id", "in": "header", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}}}, "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Reporting/IncreasedSupplyMeters": {"get": {"tags": ["IncreasedSupplyMeters"], "summary": "Gets the devices with increased supply", "operationId": "GetDevicesWithIncreasedSupply", "parameters": [{"name": "dateFrom", "in": "query", "description": "The date from.", "required": true, "schema": {"type": "string", "format": "date"}}, {"name": "dateTo", "in": "query", "description": "The date to.", "required": true, "schema": {"type": "string", "format": "date"}}, {"name": "supplyLimitValue", "in": "query", "description": "The supply limit value.", "required": true, "schema": {"type": "number", "format": "double"}}, {"name": "serviceCode", "in": "query", "description": "The service code.", "required": true, "schema": {"type": "string"}}, {"name": "measurementType", "in": "query", "description": "Type of the measurement.", "schema": {"type": "string"}}, {"name": "measurementCategory", "in": "query", "description": "The measurement category.", "schema": {"type": "string"}}, {"name": "readingGroup", "in": "query", "description": "The reading group.", "schema": {"type": "string"}}, {"name": "Audit-Correlation-Id", "in": "header", "description": "The audit correlation identifier.", "schema": {"type": "integer", "format": "int64", "default": 0}}], "responses": {"200": {"description": "Success", "content": {"text/plain": {"schema": {"type": "array", "items": {"type": "integer", "format": "int32"}}}, "application/json": {"schema": {"type": "array", "items": {"type": "integer", "format": "int32"}}}, "text/json": {"schema": {"type": "array", "items": {"type": "integer", "format": "int32"}}}}}}}}, "/api/reporting/api/Reporting/InvalidCodes": {"post": {"tags": ["InvalidCodes"], "operationId": "BrowseInvalidCodes", "parameters": [{"name": "dateFrom", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "dateTo", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "readoutSource", "in": "query", "schema": {"$ref": "#/components/schemas/ReadoutSource"}}, {"name": "Audit-Correlation-Id", "in": "header", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}}}, "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Reporting/MeterStatistics": {"post": {"tags": ["MeterStatistics"], "summary": "Browse endpoint for meter readout statistics", "operationId": "BrowseMeterReadoutStatistics", "parameters": [{"name": "Audit-Correlation-Id", "in": "header", "description": "The audit correlation identifier.", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"description": "The request.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MeterStatisticsRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/MeterStatisticsRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/MeterStatisticsRequest"}}}}, "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Reporting/MeterWithoutVoltage": {"post": {"tags": ["MeterWithoutVoltage"], "operationId": "BrowseReport", "parameters": [{"name": "dateFrom", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "dateTo", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "Audit-Correlation-Id", "in": "header", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}}}, "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Reporting/NotCommunicatingDevices": {"post": {"tags": ["NotCommunicatingDevices"], "operationId": "BrowseReportNotCommunicatingDevices", "parameters": [{"name": "numberOfInaccessibleDays", "in": "query", "schema": {"type": "integer", "format": "int32"}}, {"name": "measurementType", "in": "query", "schema": {"type": "string"}}, {"name": "measurementCategory", "in": "query", "schema": {"type": "string"}}, {"name": "material", "in": "query", "schema": {"type": "string"}}, {"name": "readingGroup", "in": "query", "schema": {"type": "string"}}, {"name": "Audit-Correlation-Id", "in": "header", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}}}, "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Reporting/NotReadCodes": {"post": {"tags": ["NotReadCodes"], "operationId": "BrowseReportNotReadCodes", "parameters": [{"name": "dateFrom", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "dateTo", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "obisCodes", "in": "query", "schema": {"type": "array", "items": {"type": "string"}}}, {"name": "Audit-Correlation-Id", "in": "header", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}}}, "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Reporting/ObjectsWithoutValidData": {"post": {"tags": ["ObjectsWithoutValidData"], "summary": "Gets the meters or Pod with not valid readouts data.", "operationId": "GetObjectsWithoutValidData", "parameters": [{"name": "Audit-Correlation-Id", "in": "header", "description": "The audit correlation identifier.", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"description": "The request.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ObjectsWithoutValidDataRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ObjectsWithoutValidDataRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ObjectsWithoutValidDataRequest"}}}, "required": true}, "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Reporting/OverLimitUsage": {"post": {"tags": ["OverLimitUsage"], "operationId": "BrowseOverLimitDevices", "parameters": [{"name": "dateFrom", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "dateTo", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "limit", "in": "query", "schema": {"type": "integer", "format": "int32"}}, {"name": "containsInvalid", "in": "query", "schema": {"type": "boolean", "nullable": true}}, {"name": "Audit-Correlation-Id", "in": "header", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}}}, "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Reporting/PowerLimit": {"post": {"tags": ["PowerLimit"], "summary": "Gets the devices with power limit exceeded.", "operationId": "GetDevicesWithPowerLimitExceeded", "parameters": [{"name": "Audit-Correlation-Id", "in": "header", "description": "The audit correlation identifier.", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"description": "The request.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PowerLimitRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/PowerLimitRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/PowerLimitRequest"}}}}, "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Reporting/ReadingGroupsStatistics": {"post": {"tags": ["ReadingGroupsStatistics"], "summary": "Browse endpoint for meter readout statistics", "operationId": "BrowseReadingGroupsStatistics", "parameters": [{"name": "Audit-Correlation-Id", "in": "header", "description": "The audit correlation identifier.", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"description": "The request.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ReadingGroupsStatisticsRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ReadingGroupsStatisticsRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ReadingGroupsStatisticsRequest"}}}}, "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Reporting/ReadoutReport": {"post": {"tags": ["ReadoutReport"], "operationId": "BrowseReportReadoutReport", "parameters": [{"name": "dataQuality", "in": "query", "schema": {"$ref": "#/components/schemas/DataQuality"}}, {"name": "dateFrom", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "dateTo", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "includeAllObisCodes", "in": "query", "schema": {"type": "boolean"}}, {"name": "readingGroup", "in": "query", "schema": {"type": "string"}}, {"name": "Audit-Correlation-Id", "in": "header", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}}}, "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Reporting/ReadoutStatistics": {"post": {"tags": ["ReadoutStatistics"], "operationId": "BrowseReportReadoutStatistics", "parameters": [{"name": "dateFrom", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "dateTo", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "includeAllObisCodes", "in": "query", "schema": {"type": "boolean"}}, {"name": "readingGroup", "in": "query", "schema": {"type": "string"}}, {"name": "Audit-Correlation-Id", "in": "header", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}}}, "responses": {"200": {"description": "Success", "content": {"text/plain": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/ReadoutStatistic"}}}, "application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/ReadoutStatistic"}}}, "text/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/ReadoutStatistic"}}}}}}}}, "/api/reporting/api/Reporting/RescueReadout": {"get": {"tags": ["RescueReadout"], "summary": "Gets the devices for rescue readout.\r\nhttps://cancom-at.atlassian.net/browse/SEMS-8602", "operationId": "GetDevicesForRescueReadout", "parameters": [{"name": "dateFrom", "in": "query", "description": "The date from.", "required": true, "schema": {"type": "string", "format": "date"}}, {"name": "dateTo", "in": "query", "description": "The date to.", "required": true, "schema": {"type": "string", "format": "date"}}, {"name": "measurementType", "in": "query", "description": "Type of the measurement.", "schema": {"type": "string"}}, {"name": "measurementCategory", "in": "query", "description": "The measurement category.", "schema": {"type": "string"}}, {"name": "readingGroup", "in": "query", "description": "The reading group.", "schema": {"type": "string"}}, {"name": "Audit-Correlation-Id", "in": "header", "description": "The audit correlation identifier.", "schema": {"type": "integer", "format": "int64", "default": 0}}], "responses": {"200": {"description": "Success", "content": {"text/plain": {"schema": {"type": "array", "items": {"type": "integer", "format": "int32"}}}, "application/json": {"schema": {"type": "array", "items": {"type": "integer", "format": "int32"}}}, "text/json": {"schema": {"type": "array", "items": {"type": "integer", "format": "int32"}}}}}}}}, "/api/reporting/api/Reporting/SwitchMeasurementCategory": {"post": {"tags": ["SwitchMeasurementCategory"], "summary": "Gets the devices for measurement category switch.", "operationId": "GetDevicesForMeasurementCategorySwitchProposal", "requestBody": {"description": "The request.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SwitchMeasurementCategoryRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/SwitchMeasurementCategoryRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/SwitchMeasurementCategoryRequest"}}}}, "responses": {"200": {"description": "Success", "content": {"text/plain": {"schema": {"$ref": "#/components/schemas/SwitchMeasurementCategoryResponse"}}, "application/json": {"schema": {"$ref": "#/components/schemas/SwitchMeasurementCategoryResponse"}}, "text/json": {"schema": {"$ref": "#/components/schemas/SwitchMeasurementCategoryResponse"}}}}}}}, "/api/reporting/api/Synchronization/SynchronizeResourceInventory": {"post": {"tags": ["Synchronization"], "summary": "Synchronizes devices to RiObject and sliced RiObject from RI.", "operationId": "SynchronizeResourceInventory", "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Synchronization/SynchronizeRequiredEvents": {"post": {"tags": ["Synchronization"], "summary": "Synchronizes required events.", "operationId": "SynchronizeRequiredEvents", "parameters": [{"name": "Audit-Correlation-Id", "in": "header", "description": "Audit-Correlation-Id.", "schema": {"type": "integer", "format": "int64"}}, {"name": "countOfMonths", "in": "query", "description": "Count of months.", "schema": {"type": "integer", "format": "int32", "default": 1}}], "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Synchronization/SynchronizeMaterialObisMapping": {"post": {"tags": ["Synchronization"], "summary": "Synchronizes material -> OBIS code mapping", "operationId": "SynchronizeMaterialObisMapping", "parameters": [{"name": "Audit-Correlation-Id", "in": "header", "description": "Audit-Correlation-Id.", "schema": {"type": "integer", "format": "int64"}}], "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Reporting/UniversalBestSourceMeters": {"post": {"tags": ["UniversalBestSourceMeters"], "operationId": "BrowseReportUniversalBestSourceMeters", "parameters": [{"name": "dateFrom", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "dateTo", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "readoutSource", "in": "query", "schema": {"$ref": "#/components/schemas/ReadoutSource"}}, {"name": "Audit-Correlation-Id", "in": "header", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}}}, "responses": {"200": {"description": "Success", "content": {"text/plain": {"schema": {"$ref": "#/components/schemas/UniversalResponse"}}, "application/json": {"schema": {"$ref": "#/components/schemas/UniversalResponse"}}, "text/json": {"schema": {"$ref": "#/components/schemas/UniversalResponse"}}}}}}}, "/api/reporting/api/Reporting/UniversalInvalidMeters": {"post": {"tags": ["UniversalInvalidMeters"], "operationId": "BrowseReportUniversalInvalidMeters", "parameters": [{"name": "dateFrom", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "dateTo", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "Audit-Correlation-Id", "in": "header", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}}}, "responses": {"200": {"description": "Success", "content": {"text/plain": {"schema": {"$ref": "#/components/schemas/UniversalResponse"}}, "application/json": {"schema": {"$ref": "#/components/schemas/UniversalResponse"}}, "text/json": {"schema": {"$ref": "#/components/schemas/UniversalResponse"}}}}}}}, "/api/reporting/api/Reporting/Utility/GetAllObisCodes": {"get": {"tags": ["Utility"], "operationId": "GetAllObisCodes", "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/MaterialObisMapping"}}}}}}}, "/api/reporting/api/Reporting/Utility/AddTsAggregate": {"post": {"tags": ["Utility"], "operationId": "AddTsAggregate", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AggregatedTimeSeriesMessage"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AggregatedTimeSeriesMessage"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AggregatedTimeSeriesMessage"}}}}, "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Reporting/Value": {"post": {"tags": ["Value"], "operationId": "BrowseReportValue", "parameters": [{"name": "dateFrom", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "dateTo", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "Audit-Correlation-Id", "in": "header", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}}}, "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Reporting/ValueStatus": {"post": {"tags": ["ValueStatus"], "operationId": "BrowseReportValueStatus", "parameters": [{"name": "dateFrom", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "dateTo", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "readoutSource", "in": "query", "schema": {"$ref": "#/components/schemas/ReadoutSource"}}, {"name": "Audit-Correlation-Id", "in": "header", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}}}, "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Reporting/ZeroConsumptionSwitching": {"post": {"tags": ["ZeroConsumptionSwitching"], "operationId": "BrowseReportZeroConsumptionSwitching", "parameters": [{"name": "dateFrom", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "dateTo", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "Audit-Correlation-Id", "in": "header", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}}}, "responses": {"200": {"description": "Success"}}}}, "/api/reporting/api/Reporting/ZeroUsage": {"post": {"tags": ["ZeroUsage"], "operationId": "BrowseReportZeroUsage", "parameters": [{"name": "dateFrom", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "dateTo", "in": "query", "schema": {"type": "string", "format": "date"}}, {"name": "containsInvalid", "in": "query", "schema": {"type": "boolean", "nullable": true}}, {"name": "Audit-Correlation-Id", "in": "header", "schema": {"type": "integer", "format": "int64", "default": 0}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/BrowseGroupRequest"}}}}, "responses": {"200": {"description": "Success"}}}}}, "components": {"schemas": {"Aggregate": {"type": "object", "properties": {"field": {"type": "string", "nullable": true}, "type": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AggregatedTimeSeriesChunk": {"type": "object", "properties": {"serviceCode": {"type": "string", "nullable": true}, "valueDelta": {"type": "number", "format": "double", "nullable": true}, "sourceValidityFlags": {"$ref": "#/components/schemas/TimeSeriesSourceValidityFlags"}, "failedValidations": {"$ref": "#/components/schemas/ReadoutValidationType"}, "missingData": {"$ref": "#/components/schemas/MissingDataFlag"}, "minimalIntervalDelta": {"type": "number", "format": "double", "nullable": true}, "maximalIntervalDelta": {"type": "number", "format": "double", "nullable": true}}, "additionalProperties": false}, "AggregatedTimeSeriesMessage": {"type": "object", "properties": {"deviceId": {"type": "integer", "format": "int32"}, "date": {"type": "string", "format": "date"}, "chunks": {"type": "array", "items": {"$ref": "#/components/schemas/AggregatedTimeSeriesChunk"}, "nullable": true}}, "additionalProperties": false}, "AnomalyResponse": {"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "nullable": true}, "subType": {"type": "integer", "format": "int32", "nullable": true}, "deviceId": {"type": "integer", "format": "int32", "nullable": true}, "deviceTypeId": {"type": "integer", "format": "int32", "nullable": true}, "serial": {"type": "string", "nullable": true}, "material": {"type": "string", "nullable": true}, "ean1": {"type": "string", "nullable": true}, "ean2": {"type": "string", "nullable": true}, "createdOn": {"type": "string", "format": "date-time", "nullable": true}, "createdBy": {"type": "string", "format": "uuid", "nullable": true}, "status": {"$ref": "#/components/schemas/TicketStatus"}, "eventTypeName": {"type": "string", "nullable": true}, "eventTimestamp": {"type": "string", "format": "date-time", "nullable": true}}, "additionalProperties": false}, "AnomalyResponseBrowseResultWithCount": {"type": "object", "properties": {"result": {"type": "array", "items": {"$ref": "#/components/schemas/AnomalyResponse"}, "nullable": true}, "count": {"type": "integer", "format": "int32", "nullable": true}}, "additionalProperties": false}, "BrowseGroupRequest": {"required": ["browseRequest"], "type": "object", "properties": {"browseRequest": {"$ref": "#/components/schemas/DataManagerRequest"}, "groupTarget": {"$ref": "#/components/schemas/IGroupTarget"}}, "additionalProperties": false}, "DataManagerRequest": {"type": "object", "properties": {"skip": {"type": "integer", "format": "int32"}, "take": {"type": "integer", "format": "int32"}, "antiForgery": {"type": "string", "nullable": true}, "requiresCounts": {"type": "boolean"}, "table": {"type": "string", "nullable": true}, "group": {"type": "array", "items": {"type": "string"}, "nullable": true}, "select": {"type": "array", "items": {"type": "string"}, "nullable": true}, "expand": {"type": "array", "items": {"type": "string"}, "nullable": true}, "sorted": {"type": "array", "items": {"$ref": "#/components/schemas/Sort"}, "nullable": true}, "search": {"type": "array", "items": {"$ref": "#/components/schemas/SearchFilter"}, "nullable": true}, "where": {"type": "array", "items": {"$ref": "#/components/schemas/WhereFilter"}, "nullable": true}, "aggregates": {"type": "array", "items": {"$ref": "#/components/schemas/Aggregate"}, "nullable": true}, "onDemandGroupInfo": {"$ref": "#/components/schemas/OnDemandGroupInfo"}, "isLazyLoad": {"type": "boolean"}}, "additionalProperties": false}, "DataQuality": {"enum": ["NoneMissing", "SomeMissing", "AllMissing"], "type": "string"}, "DateAndCount": {"type": "object", "properties": {"date": {"type": "string", "format": "date"}, "count": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "IGroupTarget": {"type": "object", "additionalProperties": false}, "MaterialObisMapping": {"type": "object", "properties": {"material": {"type": "string", "description": "Gets the material identifier or name associated with this mapping.", "nullable": true}, "readoutType": {"$ref": "#/components/schemas/ReadoutType"}, "serviceCode": {"type": "string", "description": "Gets or sets the service code that is mapped to the material and readout type.", "nullable": true}}, "additionalProperties": false, "description": "Represents a mapping between a specific material and OBIS (Object Identification System) \r\nreadout details. This class associates a material with its corresponding readout type \r\nand service code."}, "MeterOrPod": {"enum": ["Both", "Meter", "Pod"], "type": "string", "description": "Discriminator between electric meter and pod"}, "MeterStatisticsRequest": {"type": "object", "properties": {"groupTarget": {"$ref": "#/components/schemas/IGroupTarget"}, "dateFrom": {"type": "string", "format": "date"}, "dateTo": {"type": "string", "format": "date"}, "dataManagerRequest": {"$ref": "#/components/schemas/DataManagerRequest"}}, "additionalProperties": false}, "MissingDataFlag": {"enum": ["NoneMissing", "SomeMissing", "AllMissing"], "type": "string"}, "MissingDataStatus": {"enum": ["Success", "PartialSuccess", "Failed"], "type": "string"}, "ObjectsWithoutValidDataRequest": {"required": ["browseGroupRequest"], "type": "object", "properties": {"browseGroupRequest": {"$ref": "#/components/schemas/BrowseGroupRequest"}, "dateFrom": {"type": "string", "description": "Gets or sets the date from.", "format": "date"}, "dateTo": {"type": "string", "description": "Gets or sets the date to.", "format": "date"}, "readingGroup": {"type": "string", "description": "Gets or sets the reading group.", "nullable": true}, "meterOrPod": {"$ref": "#/components/schemas/MeterOrPod"}}, "additionalProperties": false, "description": "Request for \"ObjectsWithoutValidData\" endpoint"}, "OnDemandGroupInfo": {"type": "object", "properties": {"level": {"type": "integer", "format": "int32"}, "skip": {"type": "integer", "format": "int32"}, "take": {"type": "integer", "format": "int32"}, "where": {"type": "array", "items": {"$ref": "#/components/schemas/WhereFilter"}, "nullable": true}}, "additionalProperties": false}, "PowerLimit": {"enum": ["MeterConsumption", "PODConsumption", "PODSupply"], "type": "string", "description": "Defines combination of device type and power suply or consumption."}, "PowerLimitRequest": {"required": ["browseRequest"], "type": "object", "properties": {"dateFrom": {"type": "string", "description": "Gets or sets the date from.", "format": "date"}, "dateTo": {"type": "string", "description": "Gets or sets the date to.", "format": "date"}, "powerLimit": {"$ref": "#/components/schemas/PowerLimit"}, "browseRequest": {"$ref": "#/components/schemas/DataManagerRequest"}}, "additionalProperties": false, "description": "Request for 'Power limit' endpoint"}, "ReadingGroupsStatisticsRequest": {"type": "object", "properties": {"dateFrom": {"type": "string", "format": "date"}, "dateTo": {"type": "string", "format": "date"}, "readingGroups": {"type": "array", "items": {"type": "string"}, "nullable": true}, "includeAllObisCodes": {"type": "boolean"}, "dataQuality": {"$ref": "#/components/schemas/DataQuality"}}, "additionalProperties": false}, "ReadoutSource": {"enum": ["AMI", "Import", "FilledAutomatically", "Extrapolated", "Interpolated", "FilledManually", "FilledManuallyTemporarily"], "type": "string", "nullable": true}, "ReadoutStatistic": {"type": "object", "properties": {"tag": {"type": "string", "nullable": true}, "label": {"type": "string", "nullable": true}, "count": {"type": "integer", "format": "int32"}, "percent": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ReadoutType": {"enum": ["LoadProfile1", "LoadProfile2", "Billing", "ControlRead", "TypeDiagramOfDelivery", "CorrelationProfile"], "type": "string"}, "ReadoutValidationType": {"enum": ["None", "MissingData", "ConsumptionMeteredVsPhaseAndCircuitBreaker", "LoadProfileVsBillingProfile", "LoadProfileVsHistory", "ReservedDeliveryExceeded", "ReservedConsumptionExceeded", "NoRegisterChange", "RegisterOverflow", "DecreasingValues", "InvalidMeterFlag", "MaxConsumptionExceeded", "InvalidTransferSource"], "type": "string"}, "SearchFilter": {"type": "object", "properties": {"fields": {"type": "array", "items": {"type": "string"}, "nullable": true}, "key": {"type": "string", "nullable": true}, "operator": {"type": "string", "nullable": true}, "ignoreAccent": {"type": "boolean"}}, "additionalProperties": false}, "Sort": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}, "direction": {"type": "string", "nullable": true}}, "additionalProperties": false}, "SwitchMeasurementCategoryRequest": {"type": "object", "properties": {"sourceValidityFlags": {"maximum": 4294967295, "minimum": 0, "type": "integer", "format": "int64"}, "monthsWithoutDataToC4": {"type": "integer", "format": "int32"}, "newMeterDaysToC1": {"type": "integer", "format": "int32"}, "newMeterPercentAvailabilityToC1": {"type": "integer", "format": "int32"}, "existingMeterDaysToC1": {"type": "integer", "format": "int32"}, "existingMeterPercentAvailabilityToC1": {"type": "integer", "format": "int32"}, "relevantServiceCodes": {"type": "array", "items": {"type": "string"}, "nullable": true}, "groupTarget": {"$ref": "#/components/schemas/IGroupTarget"}}, "additionalProperties": false}, "SwitchMeasurementCategoryResponse": {"type": "object", "properties": {"devicesToC4": {"type": "array", "items": {"type": "integer", "format": "int32"}, "nullable": true}, "devicesToC1": {"type": "array", "items": {"type": "integer", "format": "int32"}, "nullable": true}}, "additionalProperties": false}, "TicketStatus": {"enum": ["New", "SendToExternalSystem", "ConfirmedByExternalSystem", "InProgress", "Done", "Error", "DoneManually", "Canceled", "CommandSuccess", "CommandFail", "InProgressAwaitingConfirmation", "DoneAwaitingConfirmation", "ErrorAwaitingConfirmation", "CanceledAwaitingConfirmation", "CommandSuccessAwaitingReadouts"], "type": "string", "nullable": true}, "TimeSeriesSourceValidityFlags": {"type": "object", "properties": {"data": {"maximum": 4294967295, "minimum": 0, "type": "integer", "format": "int64"}}, "additionalProperties": false}, "UniversalResponse": {"type": "object", "properties": {"result": {"type": "array", "items": {"$ref": "#/components/schemas/DateAndCount"}, "nullable": true}}, "additionalProperties": false}, "WhereFilter": {"type": "object", "properties": {"field": {"type": "string", "nullable": true}, "ignoreCase": {"type": "boolean"}, "ignoreAccent": {"type": "boolean"}, "isComplex": {"type": "boolean"}, "operator": {"type": "string", "nullable": true}, "condition": {"type": "string", "nullable": true}, "value": {"nullable": true}, "predicates": {"type": "array", "items": {"$ref": "#/components/schemas/WhereFilter"}, "nullable": true}}, "additionalProperties": false}}, "securitySchemes": {"SwaggerSecurityDefinition": {"type": "oauth2", "flows": {"password": {"tokenUrl": "https://sem-ng-egd-dev.xaas-bd2d.cloud/api/securityng/api/Authentication", "scopes": {}}}}}, "security": [{"SwaggerSecurityDefinition": []}], "tags": [{"name": "AggregatedReadouts", "description": "Report of how many devices have readouts for each day. Was requested for demo purposes for E.AG"}, {"name": "Anomalies", "description": "Provides collected anomalies."}, {"name": "Events", "description": "Provides collected events."}, {"name": "FailedValidation", "description": "List of device IDs that had matching ReadoutValidationType"}, {"name": "IncreasedSupplyMeters", "description": "Endpoint that returns non-production meters that have increased supply i.e. non-production meters should not produce more than requested \"threshold\"\r\nhttps://cancom-at.atlassian.net/browse/SEMS-8591"}, {"name": "InvalidCodes", "description": "Report \"Nevalidní OBIS kódy\" (https://k-business.atlassian.net/browse/SEMS-3957)"}, {"name": "MeterStatistics", "description": "Controller for meter readout statistics"}, {"name": "MeterWithoutVoltage", "description": "Report \"Zařízení s úspěšnám, částečně úspěšným a neúspěšným odečtem\" (https://k-business.atlassian.net/browse/SEMS-4166)"}, {"name": "NotCommunicatingDevices", "description": "Report \"Nekomunikující zařízení\" (https://k-business.atlassian.net/browse/SEMS-3954)"}, {"name": "NotReadCodes", "description": "Report \"Neodečtené OBIS kódy\" (https://k-business.atlassian.net/browse/SEMS-3955)"}, {"name": "ObjectsWithoutValidData", "description": "Endpoint that returns meters or Pods with not valid readouts data."}, {"name": "OverLimitUsage", "description": "Report \"Odběrná místa / elektroměry s denní spotřebou mimo limit\" (https://k-business.atlassian.net/browse/SEMS-3959)"}, {"name": "PowerLimit", "description": "Endpoint that returns Meters or PODS that exceeds reserved power limit (Zařízení (ELM/POD) s překročeným rezervovaným příkonem/výkonem)\r\nhttps://cancom-at.atlassian.net/browse/SEMS-8764"}, {"name": "ReadingGroupsStatistics", "description": "Controller statistics for meter readouts grouped by reading group"}, {"name": "ReadoutReport", "description": "Report \"Zařízení s úspěšnám, částečně úspěšným a neúspěšným odečtem\" (https://k-business.atlassian.net/browse/SEMS-4166)"}, {"name": "ReadoutStatistics", "description": "Report \"Statistic of readout completeness\" (https://k-business.atlassian.net/browse/SEMS-2980)"}, {"name": "RescueReadout", "description": "Endpoint that works with devices' readouts that are not billable"}, {"name": "SwitchMeasurementCategory", "description": "Endpoints for proposals to switch measurement category"}, {"name": "Synchronization", "description": "Controller that provides endpoints for synchronization with Resource inventory"}, {"name": "UniversalBestSourceMeters", "description": "Report number of devices (pods or meters) that have given BestSource\r\nit's universal - e.g. it's usable for Nemanja's widgets"}, {"name": "UniversalInvalidMeters", "description": "Report number of devices (pods or meters) that have \"ContainsInvalid\"\r\nit's universal - e.g. it's usable for Nemanja's widgets"}, {"name": "Utility", "description": "Controller with various \"utility\" endpoints"}, {"name": "Value", "description": "Report \"Hodnoty pro meraky a pody\""}, {"name": "ValueStatus", "description": "Report \"Statusy hodnot pro meraky a pody\" (https://k-business.atlassian.net/browse/SEMS-3958)"}, {"name": "ZeroConsumptionSwitching", "description": "Report \"zero consumption, proper switching between HT/LT\" (https://k-business.atlassian.net/browse/SEMS-3824)"}, {"name": "ZeroUsage", "description": "Report \"Přehled elektroměrů / Odběrných míst s nulovou denní spotřebou\" (https://k-business.atlassian.net/browse/SEMS-3956)"}]}

----------

#!/usr/bin/env python3

import requests

def test_endpoints_without_credentials():
    """
    This function attempts to call each endpoint without credentials and
    classifies them as 'protected' if they return 401 or 403, or 'not protected'
    otherwise.
    """

    # List of (HTTP method, path) tuples
    endpoints = [
        ("POST", "/api/reporting/api/Reporting/AggregatedReadouts"),
        ("POST", "/api/reporting/api/Reporting/Anomalies"),
        ("POST", "/api/reporting/api/Reporting/Events"),
        ("POST", "/api/reporting/api/Reporting/FailedValidation"),
        ("GET",  "/api/reporting/api/Reporting/IncreasedSupplyMeters"),
        ("POST", "/api/reporting/api/Reporting/InvalidCodes"),
        ("POST", "/api/reporting/api/Reporting/MeterStatistics"),
        ("POST", "/api/reporting/api/Reporting/MeterWithoutVoltage"),
        ("POST", "/api/reporting/api/Reporting/NotCommunicatingDevices"),
        ("POST", "/api/reporting/api/Reporting/NotReadCodes"),
        ("POST", "/api/reporting/api/Reporting/ObjectsWithoutValidData"),
        ("POST", "/api/reporting/api/Reporting/OverLimitUsage"),
        ("POST", "/api/reporting/api/Reporting/PowerLimit"),
        ("POST", "/api/reporting/api/Reporting/ReadingGroupsStatistics"),
        ("POST", "/api/reporting/api/Reporting/ReadoutReport"),
        ("POST", "/api/reporting/api/Reporting/ReadoutStatistics"),
        ("GET",  "/api/reporting/api/Reporting/RescueReadout"),
        ("POST", "/api/reporting/api/Reporting/SwitchMeasurementCategory"),
        ("POST", "/api/reporting/api/Synchronization/SynchronizeResourceInventory"),
        ("POST", "/api/reporting/api/Synchronization/SynchronizeRequiredEvents"),
        ("POST", "/api/reporting/api/Synchronization/SynchronizeMaterialObisMapping"),
        ("POST", "/api/reporting/api/Reporting/UniversalBestSourceMeters"),
        ("POST", "/api/reporting/api/Reporting/UniversalInvalidMeters"),
        ("GET",  "/api/reporting/api/Reporting/Utility/GetAllObisCodes"),
        ("POST", "/api/reporting/api/Reporting/Utility/AddTsAggregate"),
        ("POST", "/api/reporting/api/Reporting/Value"),
        ("POST", "/api/reporting/api/Reporting/ValueStatus"),
        ("POST", "/api/reporting/api/Reporting/ZeroConsumptionSwitching"),
        ("POST", "/api/reporting/api/Reporting/ZeroUsage"),
    ]

    # Adjust to your actual server if needed
    BASE_URL = "http://localhost:5000"

    protected_endpoints = []
    not_protected_endpoints = []

    for method, path in endpoints:
        url = f"{BASE_URL}{path}"
        try:
            if method == "GET":
                response = requests.get(url)
            else:  # POST
                response = requests.post(url)

            if response.status_code in [401, 403]:
                protected_endpoints.append(path)
            else:
                not_protected_endpoints.append(f"{path} -> HTTP {response.status_code}")
        except Exception as e:
            # If there's an exception (like a connection error), treat it as "not protected or error"
            not_protected_endpoints.append(f"{path} -> Error: {str(e)}")

    return protected_endpoints, not_protected_endpoints

if __name__ == "__main__":
    p_endpoints, np_endpoints = test_endpoints_without_credentials()

    print("PROTECTED endpoints (need credentials; returned 401/403):")
    for p in p_endpoints:
        print(f"  {p}")

    print("\nNOT PROTECTED (or threw error) endpoints:")
    for np in np_endpoints:
        print(f"  {np}")

    print("\n=== Summary ===")
    print(f"Protected (401/403): {p_endpoints}")
    print(f"Not Protected / Error: {np_endpoints}")
    print("\nDone. You can update BASE_URL or credentials as needed and rerun.")